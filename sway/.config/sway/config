include "$HOME/.cache/wal/colors-sway"


client.focused          $color2         $color2         $foreground  $color2           $color2
client.focused_inactive $background     $background     $foreground  $background       $background
client.unfocused        $background     $background     $foreground  $background       $background
client.urgent           $color2         $color2         $foreground  $color2           $color2
client.placeholder      $color2         $color2         $foreground  $color2           $color2
client.background       $color2

# Basic stuff
set $mod Mod4
set $TERMINAL kitty
gaps inner 5
gaps outer 5
# new_window 1pixel
default_border pixel 4
for_window [class="^.*"] border pixel 4

set $rofi XDG_DATA_DIRS=$HOME/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share \
          $HOME/.local/bin/rofi-sway-focused-monitor 
set $launch $rofi -show drun --terminal $TERMINAL -fullscreen -fake-transparency -fake-background screenshot
set $menu $rofi -show run -sorting-method fzf -sort -config $HOME/.config/rofi/old.rasi
# bindsym $mod+shift+l exec $launch
bindsym $mod+shift+d exec --no-startup-id $HOME/.local/bin/sway_hide.py
bindsym $mod+d exec $menu
bindsym $mod+w exec MOZ_ENABLE_WAYLAND=1 firefox
bindsym Print exec grim -g "$(slurp)" - | wl-copy
bindsym Shift+Print exec grim -g "$(slurp)" - | up - | wl-copy
bindsym $mod+u exec --no-startup-id sudo ~/.local/bin/vm-attach.sh attach

# Monitors
# exec --no-startup-id xrandr --output DVI-D-0 --primary
set $primaryMonitor DVI-D-1
set $secondaryMonitor HDMI-A-1
output $secondaryMonitor pos 0 0
output $primaryMonitor mode 1920x1080@144Hz
# Lightboost test
# output $primaryMonitor modeline 286.7 1920 1968 2000 2080 1080 1083 1088 1149 +HSync -VSync
output * background $wallpaper fill
seat * hide_cursor 30000

# Workspaces on specific monitors
workspace 1 output $primaryMonitor
workspace 2 output $primaryMonitor
workspace 3 output $primaryMonitor
workspace 4 output $primaryMonitor
workspace 5 output $primaryMonitor
workspace 6 output $secondaryMonitor
workspace 7 output $secondaryMonitor
workspace 8 output $secondaryMonitor
workspace 9 output $secondaryMonitor
workspace 10 output $secondaryMonitor
workspace none1 output $primaryMonitor
workspace none2 output $secondaryMonitor

# Autostart
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id gammastep
#exec --no-startup-id python ~/animu_rpc_server.py
#exec --no-startup-id python ~/discord-rpc-mpris/main.py
exec --no-startup-id waybar
exec --no-startup-id dunst
exec --no-startup-id whoogle-search
# exec --no-startup-id easyeffects --gapplication-service
# exec --no-startup-id autotiling
exec --no-startup-id import-gtk-settings.sh
exec --no-startup-id /usr/lib/xdg-desktop-portal -r & /usr/lib/xdg-desktop-portal-wlr
exec --no-startup-id scream -o pulse -i virbr0

# Variables for workspace names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Use floating mode for dialogs and pop-ups
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [class="^vlc$"] floating enable

# Steam floating
for_window [class="Steam"] floating enable, border none
for_window [class="^Steam$" title="^Friends$"] floating enable
for_window [class="^Steam$" title="Steam - News"] floating enable
for_window [class="^Steam$" title=".* - Chat"] floating enable
for_window [class="^Steam$" title="^Settings$"] floating enable
for_window [class="^Steam$" title=".* - event started"] floating enable
for_window [class="^Steam$" title=".* CD key"] floating enable
for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
for_window [class="^Steam$" title="^Steam Guard - Computer Authorization Required$"] floating enable
for_window [title="^Steam Keyboard$"] floating enable

# Assign programs to specific workspaces
assign [class="Firefox|Chromium"] → $ws1
assign [class="^discord$"] → $ws6
#assign [class="^Steam$"] → $ws7
assign [class="Steam"] → $ws7
assign [title="osu!"] → $ws3
assign [title=".* - OpenGL"] → $ws3
assign [class="gamescope"] → $ws3
#assign [class="^Wine$"] → $ws3

# Font for window titles. Will also be used by the bar unless a different font
font pango:monospace 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $TERMINAL

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill

# start rofi (a program launcher)

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# alternatively, you can use the arrow keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left 30
bindsym $mod+Shift+j move down 30
bindsym $mod+Shift+k move up 30
bindsym $mod+Shift+l move right 30
# alternatively, you can use the arrow keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+t split toggle

# split in horizontal orientation
# bindsym $mod+h split h

# split in vertical orientation
# bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle


# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym --whole-window  $mod+button2 floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# toggle sticky
bindsym $mod+Shift+S sticky toggle

# shutdown, reboot, lock
set $Locker betterlockscreen -l dim && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id swaymsg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+z mode "$mode_system"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# tab cycle workspaces
bindsym $mod+tab workspace next_on_output
bindsym $mod+Shift+tab workspace prev_on_output

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id "~/.local/bin/volume.sh up"
bindsym XF86AudioLowerVolume exec --no-startup-id "~/.local/bin/volume.sh down"
bindsym XF86AudioMute exec --no-startup-id "~/.local/bin/volume.sh mute"

bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPrev exec --no-startup-id playerctl previous
bindsym XF86AudioNext exec --no-startup-id playerctl next

bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10 # decrease screen brightness

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# modify gaps
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

input type:keyboard {
    xkb_layout "us(altgr-intl),fi"
    # xkb_variant "nodeadkeys"
    xkb_options "grp:alt_space_toggle"
    repeat_rate 60
    repeat_delay 250
}

input type:pointer {
    accel_profile "flat"
    pointer_accel -0.55
    # scroll_factor 1.25
}
